1. cmd[버퍼사이즈]의 버퍼오버플로우 위험 <- strcpy, sprintf 사이즈검증
2. system함수 호출시 커멘드인젝션 위험 <- 들어가는 인자 sanitize
3. char * 으로 리턴되는함수 중 로컬스택의포인터를 리턴하면 Stack reuse attack가능 <- malloc()된 힙포인터를 리턴하도록바꾸기  
4. getline 여기에서도 BOF터질수도? 아닌가?
5. int 를 unsigned int 로 바꾸기
6. cmd[BUFF_SIZE];로하고, snprintf로 다바꾸기



UI
1. printf 지우기.디버그메시지 지우기. 
2. sudo로 하는부분은 없어도 됨... 왜냐면 dvonion을 루트권한으로 실행하게 할꺼기때매.


Develop
1. stat 사용하면 파일의 상태를 얻어올수 있음 - st_size;     /* total size, in bytes */



1. 내꺼 합쳐서 마지하기


1. 먼저 기존에 존재하는 파일들의 버그 다 수정하기
2. 기존에 존재하는 파일들의 주석형식 수정하기
3. 그러고 난 후에 onion 돌려보고 포팅하기 (이해하기 어려우니까)







# Sending Data Protocol
모든 데이터는 파일형태로 전송됩니다. 

Sender는 File 또는 Message를 Receiver에게 전송할 수 있습니다. 
Sender가 최초로 작성한 데이터는 아래와 같습니다.  

File인 경우
| line No. | Description      |
|----------|------------------|
| line 1   | "final"    |
| line 2   | "File"   |
| line 3   | [Sender name] |
| line 4   | [File Name]   |
| line 5   | [Message Block]|

Text인 경우
| line No. | Description      |
|----------|------------------|
| line 1   | "final"    |
| line 2   | "text"   |
| line 3   | [Sender name] |
| line 4   | NULL   |
| line 5   | [Message Block]|

# Encrypted Data Protocol
`Sending Data Protocol` 포맷에 맞게 작성한 파일은 
암호화된 형태로 중개자에게 릴레이됩니다. 
이러한 릴레이 데이터의 프로토콜은 아래와 같습니다. 
 
| line No. | Description      |
|----------|------------------|
| line 1   | 다음 중개자의 IP    |
| line 2   | 다음 중개자의 Port  |
| line 3~  | 다음 중개자의 공개키로 암호화된 데이터 블록 |



